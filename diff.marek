commit c88bd18dfdaa476b0530aed17ae612877b66e78c
Author: Paweł Pęksa <ppeksa@spoton.com>
Date:   Sun Dec 6 20:27:23 2020 +0100

    commit od pawła

diff --git a/src/components/Navigation/index.js b/src/components/Navigation/index.js
index 9cd70a8..cec783d 100644
--- a/src/components/Navigation/index.js
+++ b/src/components/Navigation/index.js
@@ -4,16 +4,30 @@ import SignOutButton from '../SignOut';
 import { AuthUserContext } from '../Session';
 
 import * as ROUTES from '../../constants/routes';
-
-const Navigation = () => (
+  
+const Navigation = () =>{
+    return (
     <div>
         <AuthUserContext.Consumer>
-            {authUser =>
-                authUser ? <NavigationAuth /> : <NavigationNonAuth />
+        {
+            (state) => {
+                if (state.loading) {
+                    // show loader
+                }
+
+                if (state.authUser && state.user && state.user.isAdmin) {
+                    return <NaviagtionAdmin />
+                } else if(state.authUser) {
+                    return <NavigationAuth />
+                } else {
+                    return  <NavigationNonAuth/>
+                }
             }
+        }
         </AuthUserContext.Consumer>
     </div>
-);
+    );
+}
 
 const NavigationAuth = () => (
     <ul>
diff --git a/src/components/Session/withAuthentication.js b/src/components/Session/withAuthentication.js
index f980c51..31595c1 100644
--- a/src/components/Session/withAuthentication.js
+++ b/src/components/Session/withAuthentication.js
@@ -1,7 +1,7 @@
 import React from 'react';
 
 import AuthUserContext from './context';
-import { withFirebase } from '../Firebase';
+import Firebase, { withFirebase } from '../Firebase';
 
 const withAuthentication = Component => {
     class WithAuthentication extends React.Component {
@@ -10,15 +10,45 @@ const withAuthentication = Component => {
 
             this.state = {
                 authUser: null,
+                user:null,
+                loading: true,
             };
         }
 
         componentDidMount() {
             this.listener = this.props.firebase.auth.onAuthStateChanged(
                 authUser => {
-                    authUser
-                        ? this.setState({ authUser })
-                        : this.setState({ authUser: null });
+                    let thisRefrence = this;
+
+                    if (authUser) {
+                        
+                        this.props.firebase.users().on('value', snapshot => {
+                            const usersObject = snapshot.val();
+                
+                            const usersList = Object.keys(usersObject).map(key => ({
+                                ...usersObject[key],
+                                uid: key,
+                            }));
+            
+                            usersList.forEach(function(user) {
+                                if (user.uid == authUser.uid) {
+                                    thisRefrence.setState({ 
+                                        user:user, 
+                                        authUser:authUser,
+                                        loading:false
+                                    });
+                                }
+            
+                                return null;
+                            });
+                        });
+                        
+                    } else {
+                        this.setState({ 
+                            authUser: null,
+                            user: null,
+                         });
+                    }
                 },
             );
         }
@@ -29,7 +59,7 @@ const withAuthentication = Component => {
 
         render() {
             return (
-                <AuthUserContext.Provider value={this.state.authUser}>
+                <AuthUserContext.Provider value={this.state}>
                     <Component {...this.props} />
                 </AuthUserContext.Provider>
             );
